{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {
    "collapsed": true
   },
   "source": [
    "### Question:\n",
    "What are factors that are significantly associated with survival on the Titanic?"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "collapsed": false
   },
   "outputs": [],
   "source": [
    "import os\n",
    "\n",
    "os.chdir (\"C:\\\\Users\\\\princess\\\\Desktop\\\\python\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "collapsed": false
   },
   "outputs": [],
   "source": [
    "# Import titanic_data as a pandas DataFrame\n",
    "\n",
    "import pandas as pd\n",
    "import numpy as np\n",
    "import matplotlib.pyplot as plt\n",
    "import scipy.stats as stats\n",
    "import seaborn as sns\n",
    "from scipy.stats import chi2_contingency\n",
    "\n",
    "titanic_df = pd.read_csv('titanic_data.csv')\n",
    "\n",
    "# Looking at the data \n",
    "#titanic_df.head(5)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "collapsed": false,
    "scrolled": true
   },
   "outputs": [],
   "source": [
    "# Run some descriptive statistics\n",
    "\n",
    "titanic_df.describe()\n",
    "# Some people are missing age"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "collapsed": false
   },
   "outputs": [],
   "source": [
    "#double checking no duplicates\n",
    "\n",
    "len(titanic_df['PassengerId'].unique())\n",
    "#891 unique IDs"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "# getting frequencies\n",
    "def count_of (column):\n",
    "    number = titanic_df.groupby(column).PassengerId.count()\n",
    "    return number"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "collapsed": false
   },
   "outputs": [],
   "source": [
    "count_of (\"Survived\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "collapsed": false
   },
   "outputs": [],
   "source": [
    "count_of (\"SibSp\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "collapsed": false
   },
   "outputs": [],
   "source": [
    "count_of (\"Pclass\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "collapsed": false
   },
   "outputs": [],
   "source": [
    "count_of (\"Sex\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "collapsed": false
   },
   "outputs": [],
   "source": [
    "# Getting the column pcts\n",
    "def count_Pct_of (column):\n",
    "    number = titanic_df.groupby(column).PassengerId.count()\n",
    "    colsum_stat = int(number.sum(axis=0))\n",
    "    colsum_pct = 100.0 * (number/colsum_stat)\n",
    "    \n",
    "    Table_freq = pd.concat ([number, colsum_pct], axis = 1)\n",
    "    Table_freq.columns = ['Num', 'Pct']\n",
    "    return Table_freq\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "collapsed": false
   },
   "outputs": [],
   "source": [
    "#Analyzing factors associated with survival\n",
    "#Outcome: Survival\n",
    "    \n",
    "count_Pct_of (\"Survived\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "collapsed": false
   },
   "outputs": [],
   "source": [
    "count_Pct_of (\"Sex\")\n",
    "\n",
    "#More males than females"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "collapsed": false
   },
   "outputs": [],
   "source": [
    "count_Pct_of (\"SibSp\")\n",
    "#Most did not have fam/siblings on board"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "collapsed": false
   },
   "outputs": [],
   "source": [
    "count_Pct_of (\"Pclass\")\n",
    "#a quarter are upper class "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "# Recategorizing to no siblings and at least 1 sibling\n",
    "def change_sib (siblings):\n",
    "    if siblings == 0:\n",
    "        return 0\n",
    "    elif siblings >= 1:\n",
    "        return 1"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "collapsed": false
   },
   "outputs": [],
   "source": [
    "titanic_df['SibSp_cat'] = titanic_df['SibSp'].apply(change_sib) "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "collapsed": false
   },
   "outputs": [],
   "source": [
    "#titanic_df.head(5)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "collapsed": false
   },
   "outputs": [],
   "source": [
    "# how many missing age?\n",
    "titanic_df.isnull().sum()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "collapsed": false
   },
   "outputs": [],
   "source": [
    "#fill a negative # for those with missing ages\n",
    "titanic_df['Age'] = titanic_df ['Age'].fillna(-99)\n",
    "titanic_df.head(5)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "collapsed": false
   },
   "outputs": [],
   "source": [
    "#looking at mean age - will have to take out missing values that I assigned as -99\n",
    "No_missing_age = titanic_df ['Age'] > 0\n",
    "titanic_df2 = titanic_df [No_missing_age]\n",
    "\n",
    "titanic_df2.Age.mean()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "#show plots in the notebook\n",
    "%matplotlib inline"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "collapsed": false
   },
   "outputs": [],
   "source": [
    "#histogram\n",
    "titanic_df2.Age.hist()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "titanic_df ['Survived_cat'] = np.where(titanic_df['Survived'] == 1, 'Survived', 'Not Survived') \n",
    "titanic_df ['SibSp_cat2'] = np.where(titanic_df['SibSp_cat'] == 1, 'At least one sib/spouse', 'No sib/spouse') "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "def change_age_cat (age):\n",
    "    if age < 0:\n",
    "        return None\n",
    "    if age < 18:\n",
    "        return '<18 years old'\n",
    "    if age < 30:\n",
    "        return '18-29 years old'\n",
    "    if age < 50:\n",
    "        return '30-49 years old'\n",
    "    else:\n",
    "        return '50+ years old'"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "titanic_df ['age_cat_desc'] = titanic_df['Age'].apply(change_age_cat)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "collapsed": false
   },
   "outputs": [],
   "source": [
    "def SES_desc (value):\n",
    "    if value == 1:\n",
    "        return 'Upper'\n",
    "    elif value ==2:\n",
    "        return 'Middle'\n",
    "    elif value == 3:\n",
    "        return 'Lower'"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "collapsed": false
   },
   "outputs": [],
   "source": [
    "titanic_df ['SES_cat_desc'] = titanic_df['Pclass'].apply(SES_desc)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Visualizing data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "collapsed": false
   },
   "outputs": [],
   "source": [
    "#Survival by Sex\n",
    "sns.countplot (x = 'Survived_cat', hue = 'Sex', data = titanic_df)\n",
    "plt.title ('Survival by Sex')\n",
    "plt.xlabel ('Survival')\n",
    "plt.ylabel ('Count of individuals')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "collapsed": false
   },
   "outputs": [],
   "source": [
    "#(\"Survival by presence of family on board\")\n",
    "\n",
    "sns.countplot (x = 'Survived_cat', hue = 'SibSp_cat2', data = titanic_df)\n",
    "plt.title(\"Survival by presence of family on board\")\n",
    "plt.xlabel (\"Survival\")\n",
    "plt.ylabel ('Count of individuals')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "collapsed": false
   },
   "outputs": [],
   "source": [
    "#Survival by Age Group\n",
    "sns.countplot (x = 'Survived_cat', hue = 'age_cat_desc', data = titanic_df)\n",
    "plt.title(\"Survival by Age groups\")\n",
    "plt.xlabel (\"Survival\")\n",
    "plt.ylabel ('Count of individuals')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "collapsed": false
   },
   "outputs": [],
   "source": [
    "#Survival by SES\n",
    "sns.countplot (x = 'Survived_cat', hue = 'SES_cat_desc', data = titanic_df)\n",
    "plt.title(\"Survival by SES\")\n",
    "plt.xlabel (\"Survival\")\n",
    "plt.ylabel ('Count of individuals')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "collapsed": false
   },
   "outputs": [],
   "source": [
    "#Boxplot of Age by Survival\n",
    "sns.boxplot (x='Survived_cat', y = 'Age', data = titanic_df)\n",
    "plt.title ('Boxplot of Age by Survival')\n",
    "plt.xlabel ('Survival')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Survival rates"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "collapsed": false
   },
   "outputs": [],
   "source": [
    "Sex_crosstab = pd.crosstab( titanic_df['Sex'], titanic_df['Survived'])\n",
    "Sib_crosstab = pd.crosstab( titanic_df['SibSp_cat'], titanic_df['Survived'])\n",
    "Age_crosstab = pd.crosstab( titanic_df['Age_cat'], titanic_df['Survived'])\n",
    "Class_crosstab = pd.crosstab( titanic_df['Pclass'], titanic_df['Survived'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "collapsed": false
   },
   "outputs": [],
   "source": [
    "Sex_crosstab"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "collapsed": false,
    "scrolled": true
   },
   "outputs": [],
   "source": [
    "#get ROW percentages for each of the above (SURVIVAL RATE)\n",
    "def row_pct(value):\n",
    "    print (value.apply(lambda r: r/r.sum(), axis=1))\n",
    "    "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "collapsed": false
   },
   "outputs": [],
   "source": [
    "row_pct (Sex_crosstab)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "* Among all females, 75% survived and 25% died\n",
    "* Among all males, 19% survived and 81% died"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "collapsed": false
   },
   "outputs": [],
   "source": [
    "row_pct(Sib_crosstab)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "* Among those with no siblings/spouses, 35% surived and 65% died\n",
    "* Among all those with at least one sibling/spouse, 47% survived and 53% died"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "collapsed": false,
    "scrolled": true
   },
   "outputs": [],
   "source": [
    "row_pct(Age_crosstab)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "* Among those younger than 18 years old, 54% survived\n",
    "* Among those 18-29 years old, 35% survived\n",
    "* Among those 31-49, 41% survived\n",
    "* Among those 50 and older, 31% survived\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "collapsed": false
   },
   "outputs": [],
   "source": [
    "row_pct(Class_crosstab)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "* Among those categorized as upper class, 63% survived\n",
    "* Among those categorized as middle class, 47% survived\n",
    "* Among those categorized as lower class, 24% survived"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Statistical tests (chi sq)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "#Chi sq function\n",
    "def chi_sq (value):\n",
    "    chi = chi2_contingency(value)\n",
    "    print (chi)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "chi_sq (Sex_crosstab)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "chi_sq (Sib_crosstab)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "chi_sq (Age_crosstab)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "chi_sq (Class_crosstab)"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 2",
   "language": "python",
   "name": "python2"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 2
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython2",
   "version": "2.7.12"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 0
}
